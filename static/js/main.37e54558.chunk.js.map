{"version":3,"sources":["components/Heading.js","components/FilterBar.js","components/Categories.js","components/Header.js","components/repListElement.js","components/RepList.js","components/Footer.js","components/Main.js","components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["Heading","numberOfReps","className","FilterBar","props","type","placeholder","value","query","onChange","filterRepList","Categories","exact","to","activeClassName","Header","RepListElement","key","element","id","filteredRepListLength","letters","matchedLetters","icon","fork","RepoForked","Repo","style","fontWeight","name","RepList","filteredRepList","map","el","match","toString","slice","length","allRepsShown","list","Footer","onClick","showAllReps","Main","e","handleQuery","state","repList","filter","startsWith","target","setState","this","React","Component","Loader","loaderStyles","size","width","height","display","justifyContent","alignItems","App","createLists","j","listsConfig","createList","filteringCriterium","filterCb","Object","entries","shift","prop","criterium","publicRepList","privateRepList","sourcesRepList","forksRepList","isFetching","fetch","dataJSON","json","setTimeout","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37e54558.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Heading({ numberOfReps }) {\r\n    return (\r\n        <div className=\"heading-box\">\r\n            <div className=\"wrapper\">\r\n                <h2 className=\"heading-secondary\">Your repositories\r\n                    <span className=\"badge\"> {numberOfReps}</span>\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function FilterBar(props) {\r\n    return (\r\n        <div className=\"filter-bar\">\r\n            <div className=\"wrapper\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Find a repository...\"\r\n                    value={props.query}\r\n                    onChange={props.filterRepList}\r\n                    className=\"filter-bar__input\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Categories() {\r\n    return (\r\n        <nav className=\"navigation\">\r\n            <div className=\"wrapper\">\r\n                <ul className=\"navigation__list\">\r\n                    <li className=\"navigation__item\">\r\n                        <NavLink exact to=\"/\" activeClassName=\"navigation__link--active\" className=\"navigation__link\">All</NavLink>\r\n                    </li>\r\n                    <li className=\"navigation__item\">\r\n                        <NavLink exact to=\"/public\" activeClassName=\"navigation__link--active\" className=\"navigation__link\">Public</NavLink>\r\n                    </li>\r\n                    <li className=\"navigation__item\">\r\n                        <NavLink exact to=\"/private\" activeClassName=\"navigation__link--active\" className=\"navigation__link\">Private</NavLink>\r\n                    </li>\r\n                    <li className=\"navigation__item\">\r\n                        <NavLink exact to=\"/sources\" activeClassName=\"navigation__link--active\" className=\"navigation__link\">Sources</NavLink>\r\n                    </li>\r\n                    <li className=\"navigation__item\">\r\n                        <NavLink exact to=\"/forks\" activeClassName=\"navigation__link--active\" className=\"navigation__link\">Forks</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Heading from './Heading';\r\nimport FilterBar from './FilterBar';\r\nimport Categories from './Categories';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <header className=\"header\">\r\n            <Heading numberOfReps={props.numberOfReps} />\r\n            <FilterBar query={props.query} filterRepList={props.filterRepList} />\r\n            <Categories />\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport Octicon, { Repo, RepoForked } from '@primer/octicons-react';\r\n\r\nexport default function RepListElement(props) {\r\n    return (\r\n        <li \r\n            key={props.element.id} \r\n            className={props.filteredRepListLength && props.filteredRepListLength % 2 === 0 ? \r\n            'list__item list__item--even' : 'list__item'}>\r\n            <div className=\"wrapper\">\r\n                {props.letters && props.matchedLetters ?\r\n                    <>\r\n                        <span className=\"icon\"><Octicon icon={props.element.fork ? RepoForked : Repo} /></span>\r\n                        <span style={{ fontWeight: \"bold\" }}>{props.matchedLetters}</span>\r\n                        <span>{props.letters}</span>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <span className=\"icon\"><Octicon icon={props.element.fork ? RepoForked : Repo} /></span>\r\n                        <span>{props.element.name}</span>\r\n                    </>\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport RepListElement from './repListElement';\r\n\r\nexport default function RepList(props) {\r\n    return (\r\n        <section className=\"wrapper--replist\">\r\n            <ul className=\"list\">\r\n                {\r\n                    props.query ? \r\n                        props.filteredRepList.map(el => {\r\n                            const matchedLetters = el.name.match(props.query).toString();\r\n                            const letters = el.name.slice(matchedLetters.length);\r\n                            return <RepListElement \r\n                                        key={el.id} \r\n                                        element={el} \r\n                                        matchedLetters={matchedLetters} \r\n                                        letters={letters} \r\n                                        filteredRepListLength={props.filteredRepList.length} \r\n                                    />\r\n                        })\r\n                    : \r\n                    !props.allRepsShown ?\r\n                        props.list.slice(0, 3).map(el =>\r\n                            <RepListElement key={el.id} element={el} />)\r\n                        :\r\n                        props.list.map(el =>\r\n                            <RepListElement key={el.id} element={el} />)\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"wrapper\">\r\n                <button\r\n                    onClick={props.showAllReps}\r\n                    className=\"button-loader\">\r\n                    {!props.allRepsShown ? 'Load more...' : 'Load less...'}\r\n                </button>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport RepList from './RepList';\r\nimport Footer from './Footer';\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            repList: this.props.repList,\r\n            filteredRepList: [],\r\n            query: '',\r\n            allRepsShown: false\r\n        }\r\n    }\r\n\r\n    filterRepList = e => {\r\n        this.handleQuery(e);\r\n        const filteredRepList = this.state.repList.filter(el => el.name.startsWith(e.target.value));\r\n        this.setState({ filteredRepList });\r\n    }\r\n\r\n    handleQuery = e => {\r\n        this.setState({ query: e.target.value });\r\n    }\r\n\r\n    showAllReps = () => {\r\n        this.setState({ allRepsShown: !this.state.allRepsShown });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header\r\n                    numberOfReps={this.props.repList.length}\r\n                    query={this.state.query}\r\n                    filterRepList={this.filterRepList}\r\n                />\r\n                <RepList\r\n                    list={this.state.repList}\r\n                    query={this.state.query}\r\n                    filteredRepList={this.state.filteredRepList}\r\n                    allRepsShown={this.state.allRepsShown}\r\n                />\r\n                {this.state.repList.length ?\r\n                    <Footer\r\n                        allRepsShown={this.state.allRepsShown}\r\n                        showAllReps={this.showAllReps}\r\n                    /> : null}\r\n            </>\r\n\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Spinner } from 'react-activity';\r\nimport 'react-activity/dist/react-activity.css';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div style={loaderStyles}>\r\n            <Spinner size={40} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst loaderStyles = {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.scss';\nimport Main from './components/Main';\nimport Loader from './components/Loader';\nimport listsConfig from './listsConfig.json';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\trepList: [],\n\t\t\tpublicRepList: [],\n\t\t\tprivateRepList: [],\n\t\t\tsourcesRepList: [],\n\t\t\tforksRepList: [],\n\t\t\tisFetching: true\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst dataJSON = await fetch(`https://api.github.com/users/goschevski/repos`);\n\t\tconst repList = await dataJSON.json();\n\t\tthis.setState({ repList }, () => setTimeout(() => this.setState({ isFetching: false }), 1200 ));\n\t\tthis.createLists();\n\t}\n\n\tcreateLists = () => {\n\t\tfor (let j in listsConfig) this.createList(j, listsConfig[j].filteringCriterium);\n\t}\n\n\tcreateList = (list, filteringCriterium) => {\n\t\tthis.setState({\n\t\t\t[list]: this.state.repList.filter(this.filterCb(filteringCriterium))\n\t\t});\n\t}\n\n\tfilterCb = filteringCriterium => el => {\n\t\tconst [prop, criterium] = Object.entries(filteringCriterium).shift();\n\t\treturn el[prop] === criterium;\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className={!this.state.isFetching ? 'App' : null}>\n\t\t\t\t\t{ this.state.isFetching ? <Loader />\n\t\t\t\t\t: <Switch>\n\t\t\t\t\t\t<Route exact path='/' component={() => <Main repList={this.state.repList} />} />\n\t\t\t\t\t\t<Route exact path='/public' component={() => <Main repList={this.state.publicRepList} />} />\n\t\t\t\t\t\t<Route exact path='/private' component={() => <Main repList={this.state.privateRepList} /> } />\n\t\t\t\t\t\t<Route exact path='/sources' component={() => <Main repList={this.state.sourcesRepList} />} />\n\t\t\t\t\t\t<Route exact path='/forks' component={() => <Main repList={this.state.forksRepList} /> } />\n\t\t\t\t\t\t<Route component={() => <div><h2>Error 404 <br /> Page not found</h2><Link to='/'>Go back</Link></div>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}